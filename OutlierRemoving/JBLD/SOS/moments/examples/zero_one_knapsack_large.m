% AUTHOR: Jose Lopez NEU 2014
% LICENSE:This code is licensed under the BSD License.
%
% This script implements a 75 variable 0-1 problem.
%
clear;clc;
%%
n_vars = 75; 
c = [0.287848249822753 2.24260098521491 2.24552687217988 1.62989829925533 1.01439694957216 ...
2.49700098486158 1.65771653407787 2.87262935088606 2.678499957954 1.06951085138101 ...
1.63920567897566 1.04004525376485 1.86840837197739 2.38987405592519 2.23762470462195 ...
0.376608694064459 2.46718202027706 0.0754515042855065 1.24328664277209 2.19422240391881 ...
2.34412200082789 1.10185774539411 2.23460356872502 2.67680156469332 0.727810158839009 ...
0.388790927512621 0.67520364638374 1.0500417570023 0.861253839438528 2.78246402153828 ...
0.153941270450387 1.77800026561916 0.488696700653197 2.51521730901909 0.502682790633812 ...
1.50660184622842 2.99798843707716 1.06622145380364 0.141233128646502 0.640981755362397 ...
1.19351737230812 1.00100454114088 0.688807595904593 2.8083605325062 2.04956635409995 ...
2.88634138716859 1.31391953289839 2.82100996326272 0.0175029737171126 1.83092109020963 ...
2.40322727089836 0.698944600240944 2.79740602776294 2.28978832600123 2.47934861910804 ...
1.7203907658146 2.37774499236068 0.987123587517743 0.670385928377558 0.937159026057761 ...
1.75357043558567 2.48974242306457 0.871387474641804 1.20766317618937 2.58617189529944 ...
1.8442186506492 2.97356336498938 0.611096625556866 2.48162725483996 2.02758485685832 ...
0.746848410119424 1.4273568797086 1.19722568018038 1.79831474727424 2.40156829741155]';
w = [3 17 17 8 9 12 15 15 16 8 9 20 12 17 6 13 12 20 2 11 11 2 19 18 9 16 3 13 6 9 ...
17 4 7 10 7 16 20 4 5 15 8 20 20 13 18 9 13 20 12 19 15 10 13 18 4 8 20 9 14 19 20 ...
14 3 1 13 12 20 15 14 11 6 20 11 1 14]';
b = 71;
%%
[M,basis_data] = get_mmatrix(1,n_vars);
M = make_zero_one(M);
[monomials,n_monomials] = get_monomials(M);
%%
cvx_clear;
cvx_begin sdp
cvx_solver sedumi

variable y(n_monomials);
M1 = assignm(y,get_map(M,monomials));

y0 = y(1);
%build objective
first_order_monomials = basis_data.monomial{2};
indices = get_index(monomials,first_order_monomials);

x = y(indices);
maximize(c'*x);
subject to
y0==1
M1>=0
b-w'*x>=0
cvx_end
cvx_optval  %25.451 
x = round(x); 
format = ['x''=[',repmat('%d',1,n_vars),']\n'];
fprintf(format,x);
cost = w'*x %71

%bintprog and LP relaxation give the same result:

% [xm,objective,exit_code,output] = 
%bintprog(-c,[w';zeros(n_vars-1,n_vars)],[b;zeros(n_vars-1,1)]);
% -objective    %25.451
% cost = w'*xm  %71
% norm(x-xm)
% 
% [xm2,objective2,exit_code2,output2] = 
%linprog(-c,[w';zeros(n_vars-1,n_vars)],[b;zeros(n_vars-1,1)],[],...
%[],zeros(n_vars,1),ones(n_vars,1));
% xm2 = round(xm2);
% objective2 = c'*xm2 %25.451
% cost2 = w'*xm2      %71
% norm(x-xm2)
